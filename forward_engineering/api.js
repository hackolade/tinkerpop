"use strict";var C=Object.defineProperty;var m=(e,n)=>C(e,"name",{value:n,configurable:!0});var o,g="    ",h="g";module.exports={generateContainerScript(e,n,r,t){let{collections:c,relationships:s,jsonData:i,containerData:a}=e;n.clear();try{o=t.require("lodash");let p="",u=o.get(a,[0,"traversalSource"],"g");h=f(u),c=c.map(JSON.parse),s=s.map(JSON.parse);let l=o.get(a,[1,"indexes"],[]),d=o.get(a,[0,"graphVariables"],[]),$=I(d),S=J(c,i),O=T(c,s,i),b=R(l);$&&(p+=$+`
`),S&&(p+=S),O&&(p+=`

`+O),b&&(p+=`

`+b),r(null,p)}catch(p){n.log("error",{message:p.message,stack:p.stack},"Forward-Engineering Error"),setTimeout(()=>{r({message:p.message,stack:p.stack})},150);return}}};var I=m(e=>e.reduce((n,r)=>{let t=r.graphVariableKey,c=r.GraphVariableValue||"";if(!t)return n;try{let s=JSON.parse(c);return o.isString(s)?n+`graph.variables().set("${t}", "${c}");
`:n+`graph.variables().set("${t}", ${c});
`}catch{return n+`graph.variables().set("${t}", "${c}");
`}},""),"generateVariables"),j=m((e,n)=>{let r=f(e.collectionName),t=D(e,n);return`${h}.addV(${JSON.stringify(r)})${t}`},"generateVertex"),J=m((e,n)=>{let t=e.map(c=>{let s=JSON.parse(n[c.GUID]);return j(c,s)}).join(`;

`);return t?t+";":""},"generateVertices"),U=m((e,n,r,t)=>{let c=f(r.name),s=D(r,t);return`${h}.addE(${JSON.stringify(c)}).
${g}from(${e}).
${g}to(${n})${s}`},"generateEdge"),V=m(e=>`${h}.V().hasLabel(${JSON.stringify(e)}).next()`,"getVertexVariableScript"),T=m((e,n,r)=>{let t=n.reduce((c,s)=>{let i=e.find(d=>d.GUID===s.parentCollection),a=e.find(d=>d.GUID===s.childCollection);if(!i||!a)return c;let p=f(i.collectionName),u=f(a.collectionName),l=JSON.parse(r[s.GUID]);return c.concat(U(V(p),V(u),s,l))},[]);return o.isEmpty(t)?"":t.join(`;

`)+";"},"generateEdges"),k=m(e=>{switch(e){case"map":case"list":return"[]";case"set":return"[].toSet()";case"string":return'"Lorem"';case"number":return"1";case"date":return"new Date()";case"timestamp":return"new java.sql.Timestamp(1234567890123)";case"uuid":return"UUID.randomUUID()";case"boolean":return"true"}return'"Lorem"'},"getDefaultMetaPropertyValue"),E=m(e=>e?e.reduce((r,t)=>{if(!t.metaPropName)return r;let c=o.isUndefined(t.metaPropSample)?k(t.metaPropType):t.metaPropSample;return r.concat(JSON.stringify(t.metaPropName),c)},[]).join(", "):"","handleMetaProperties"),F=m((e,n,r)=>{let t=o.get(e,"items",[]);o.isArray(t)||(t=[t]),t.length===1&&(t=[...t,...t],r.push(o.first(r)));let c=e.childType||e.type,s=JSON.stringify(n),i=t.map((u,l)=>y(u,2,c,r[l])),a=t.map(u=>{let l=E(u.metaProperties);return o.isEmpty(l)?"":", "+l}),p=t.map(u=>u.propCardinality||e.propCardinality);return i.reduce((u,l,d)=>`${u}.
${g}property(${p[d]}, ${s}, ${l}${a[d]})`,"")},"handleMultiProperty"),N=m(e=>{let r=["oneOf","allOf","anyOf"].reduce((s,i)=>{let a=o.get(e,i,[]);return o.isEmpty(a)?s:Object.assign({},s,{[i]:{choice:o.get(e,i,[]),meta:o.get(e,`${i}_meta`,{})}})},{});return o.isEmpty(r)?[]:Object.keys(r).map(s=>{let i=r[s],a=o.get(i,"meta.index");return{properties:o.first(i.choice).properties||{},index:a}}).sort((s,i)=>s.index-i.index).map((s,i,a)=>{if(i===0)return s;let p=a.reduce((u,l,d)=>d>=i?u:u+Object.keys(l.properties).length-1,0);return{properties:s.properties,index:s.index+p}})},"getChoices"),_=m((e,n)=>{if(o.isEmpty(e))return n;let r=e.reduce((t,c)=>{let s=o.get(c,"properties",{});return t.concat(Object.keys(s).map(i=>s[i]))},[]);return[...n,...r]},"resolveArrayChoices"),v=m((e,n)=>o.isEmpty(e)?n:e.reduce((r,t)=>{let c=t.properties,s=t.index;return o.isEmpty(r)?c:o.isUndefined(s)||Object.keys(r).length<=s?Object.assign({},r,c):Object.keys(r).reduce((i,a,p)=>p!==s?Object.assign({},i,{[a]:r[a]}):Object.assign({},i,c,{[a]:r[a]}),{})},n||{}),"resolveChoices"),D=m((e,n)=>{let r=o.get(e,"properties",{}),t=N(e),c=v(t,r);return o.isEmpty(c)?"":Object.keys(c).reduce((s,i)=>{let a=c[i],p=a.childType||a.type,u=E(a.metaProperties);if(o.isEmpty(u)||(u=", "+u),p==="multi-property")return s+`${F(a,i,n[i])}`;let l=y(a,2,p,n[i]);return s+`.
${g}property(${a.propCardinality}, ${JSON.stringify(i)}, ${l}${u})`},"")},"addPropertiesScript"),w=m(e=>["map","set","list","timestamp","date","uuid","number"].includes(e),"isGraphSONType"),x=m((e,n,r)=>{let t=N(e),c=v(t,o.get(e,"properties",{})),s=Object.keys(c).map(u=>({name:u,property:c[u]})),i=o.range(0,n).reduce(u=>u+g,""),a=o.range(0,n-1).reduce(u=>u+g,""),p=s.reduce((u,{name:l,property:d})=>{let $=r[l],S=d.childType||d.type;return u+`, 
${i}${JSON.stringify(l)}: ${y(d,n+1,S,$)}`},"");return p.slice(0,2)===", "&&(p=p.slice(2)),`[${p}
${a}]`},"convertMap"),P=m((e,n,r)=>{let t=o.get(e,"items",[]);o.isArray(t)||(t=[t]);let c=N(e);t=_(c,t);let s=t.reduce((i,a,p)=>{let u=r[p],l=a.childType||a.type;return i+`, ${y(a,n+1,l,u)}`},"");return s.slice(0,2)===", "&&(s=s.slice(2)),`[${s}]`},"convertList"),L=m((e,n,r)=>`${P(e,n,r)}.toSet()`,"convertSet"),A=m(e=>`new java.sql.Timestamp(${JSON.stringify(e)})`,"convertTimestamp"),G=m(e=>`new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSX").parse(${JSON.stringify(e)})`,"convertDate"),M=m(e=>`UUID.fromString(${JSON.stringify(e)})`,"convertUUID"),q=m((e,n)=>{let r=e.mode,t=JSON.stringify(n);switch(r){case"double":return`${t}d`;case"float":return`${t}f`;case"long":return`${t}l`}return t},"convertNumber"),y=m((e,n,r,t)=>{if(!w(r))return JSON.stringify(t);switch(r){case"uuid":return M(t);case"map":return x(e,n,t);case"set":return L(e,n,t);case"list":return P(e,n,t);case"timestamp":return A(t);case"date":return G(t);case"number":return q(e,t)}return x(e,n,t)},"convertPropertyValue"),f=m(e=>{let n="New_vertex",r="v_";if(!e||!o.isString(e))return n;let t=e.replace(/[\s`~!@#%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi,"_");return t.match(/^[0-9].*$/)?`${r}_${t}`:t},"transformToValidGremlinName"),H=m(e=>`graph.createIndex("${e.propertyName}", ${e.elementType||"Vertex"})`,"generateIndex"),R=m(e=>{let r=e.filter(t=>t.propertyName&&t.isActivated!==!1).map(H).join(`;
`);return r?r+";":""},"generateIndexes");
